MEAN stack:
    ☐ What is MEAN
    ☐ Intro to AngularJS (https://angular.io/)
    ☐ Node and Express
    ☐ Integrating MongoDB
    ☐ Tying things together
    ☐ Bundling Angular application (https://stackoverflow.com/questions/37631098/how-to-bundle-an-angular-app-for-production)

Why use the MEAN stack:
    ☐ One language to rule them all
    ☐ All open source
    ☐ Huge module library
    ☐ Get started quickly

Angular JS Introduction:
    ☐ Open source maintained by Google
    ☐ Client side MVC (MVVM) framework (https://stackoverflow.com/questions/36950582/angular2-mvc-mvvm-or-mv)
    ☐ Excellent data bindings
    ☐ Easy to test

Tools:
    ☐ Visual Studio Code:
        ☐ Eclipse Keymap
        ☐ Prettify JSON

Writing your first app:
    ☐ Download Node.js
    ☐ Follow steps on https://angular.io/guide/quickstart
    ☐ After the angular app setup is complete, open index.html and do below steps.
        ☐ Add the Bootstrap js CDN to index.html (https://getbootstrap.com/docs/4.1/getting-started/introduction/#js)
        ☐ Add the Bootswatch css to index.html (https://www.bootstrapcdn.com/bootswatch/)
    ☐ Run: ng serve -> to run the app and launch the browser automatically.

2-Way binding:
    ☐ Both syntax are the same:
        ☐ <input type="text" name="message" [ngModel]="message" (ngModelChange)="message = $event">
            This gives you the ability to handle changes going down in a different way than changes coming up.
                component to template <<==>> template to component 
        ☐ <input type="text" name="message" [(ngModel)]="message">
        ☐ https://stackoverflow.com/questions/44840735/change-vs-ngmodelchange-in-angular
        ☐ https://angular-2-training-book.rangle.io/handout/components/app_structure/two_way_data_binding.html
        